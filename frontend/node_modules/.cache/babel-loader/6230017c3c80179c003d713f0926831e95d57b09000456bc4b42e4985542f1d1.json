{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JYUN\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354 (21)\\\\CotatoProject\\\\frontend\\\\src\\\\Components\\\\posts\\\\WriteContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField } from '../../modules/write';\nimport WriteForm from './WriteForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WriteContainer = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(_ref => {\n    let {\n      user\n    } = _ref;\n    return {\n      user: user.user\n    };\n  });\n  const {\n    postType\n  } = useSelector(_ref2 => {\n    let {\n      write\n    } = _ref2;\n    return {\n      postType: write.postType\n    };\n  });\n  const onDrop = (pictures, urls) => {\n    dispatch(changeField({\n      key: \"images\",\n      value: pictures\n    }));\n  };\n  const onChangeField = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch(changeField({\n      key: name,\n      value\n    }));\n  };\n  const onUpdate = (startDate, endDate) => {\n    var start = splitString(startDate);\n    var end = splitString(endDate);\n    dispatch(changeField({\n      key: \"date\",\n      value: [start, end]\n    }));\n  };\n  const onSelect = value => {\n    dispatch(changeField({\n      key: \"category\",\n      value: value.value\n    }));\n    setOption(value);\n  };\n  const [option, setOption] = useState('');\n  const options = [{\n    value: '공지사항',\n    label: '공지사항'\n  }, {\n    value: '세미나',\n    label: '세미나'\n  }, {\n    value: '스터디',\n    label: '스터디'\n  }, {\n    value: '프로젝트',\n    label: '프로젝트'\n  }, {\n    value: '번개',\n    label: '번개'\n  }, {\n    value: '기타',\n    label: '기타'\n  }];\n  useEffect(() => {\n    if (user) {\n      dispatch(changeField({\n        key: \"writer\",\n        value: user.nickname\n      }));\n    }\n  }, [dispatch, user]);\n  useEffect(() => {\n    if (user) {\n      dispatch(changeField({\n        key: \"userId\",\n        value: user.userId\n      }));\n    }\n  }, [dispatch, user]);\n  function splitString(str) {\n    var _arr = `${str}`.split(' ');\n    return _arr[0] + ' ' + _arr[1] + ' ' + _arr[2] + ' ' + _arr[3];\n  }\n  return /*#__PURE__*/_jsxDEV(WriteForm, {\n    onChangeField: onChangeField,\n    onDrop: onDrop,\n    onUpdate: onUpdate,\n    onSelect: onSelect,\n    options: options,\n    option: option,\n    postType: postType\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(WriteContainer, \"EHVyu09FAKqrFGUt9cq/Y3voYpY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = WriteContainer;\nexport default WriteContainer;\nvar _c;\n$RefreshReg$(_c, \"WriteContainer\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","changeField","WriteForm","WriteContainer","dispatch","user","postType","write","onDrop","pictures","urls","key","value","onChangeField","e","name","target","onUpdate","startDate","endDate","start","splitString","end","onSelect","setOption","option","options","label","nickname","userId","str","_arr","split"],"sources":["C:/Users/JYUN/Desktop/새 폴더 (21)/CotatoProject/frontend/src/Components/posts/WriteContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField } from '../../modules/write';\r\nimport WriteForm from './WriteForm';\r\n\r\nconst WriteContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(({ user }) => ({\r\n        user: user.user,\r\n    }));\r\n    const { postType } = useSelector(({ write }) => ({\r\n        postType: write.postType,\r\n    }));\r\n\r\n    const onDrop = (pictures, urls) => {\r\n        dispatch(changeField({\r\n            key: \"images\",\r\n            value: pictures\r\n        }));\r\n    };\r\n\r\n    const onChangeField = e => {\r\n        const { value, name } = e.target;\r\n\r\n        dispatch(changeField({\r\n            key: name,\r\n            value\r\n        }));\r\n    };\r\n\r\n    const onUpdate = (startDate, endDate) => {\r\n        var start = splitString(startDate);\r\n        var end = splitString(endDate);\r\n\r\n        dispatch(changeField({\r\n            key: \"date\",\r\n            value: [start, end],\r\n        }));\r\n    };\r\n\r\n    const onSelect = (value) => {\r\n        dispatch(changeField({\r\n            key: \"category\",\r\n            value: value.value\r\n        }))\r\n\r\n        setOption(value);\r\n    };\r\n\r\n    const [option, setOption] = useState('');\r\n    const options = [\r\n     { value: '공지사항', label: '공지사항' },\r\n      { value: '세미나', label: '세미나' },\r\n        { value: '스터디', label: '스터디' },\r\n        { value: '프로젝트', label: '프로젝트' },\r\n        { value: '번개', label: '번개' },\r\n        { value: '기타', label: '기타' },\r\n\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if(user) {\r\n            dispatch(changeField({\r\n                key: \"writer\",\r\n                value: user.nickname,\r\n            }));\r\n        }\r\n    }, [dispatch, user]);\r\n\r\n    useEffect(() => {\r\n        if(user) {\r\n            dispatch(changeField({\r\n                key: \"userId\",\r\n                value: user.userId\r\n            }));\r\n        }\r\n    }, [dispatch, user]);\r\n\r\n    function splitString(str) {\r\n        var _arr = `${ str }`.split(' ');\r\n\r\n        return _arr[0] + ' ' + _arr[1] + ' ' + _arr[2] + ' ' + _arr[3];\r\n    }\r\n\r\n    return (\r\n        <WriteForm\r\n            onChangeField={ onChangeField }\r\n            onDrop={ onDrop }\r\n            onUpdate={ onUpdate }\r\n            onSelect={ onSelect }\r\n            options={ options }\r\n            option={ option }\r\n            postType={ postType }\r\n        />\r\n    );\r\n};\r\n\r\nexport default WriteContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}