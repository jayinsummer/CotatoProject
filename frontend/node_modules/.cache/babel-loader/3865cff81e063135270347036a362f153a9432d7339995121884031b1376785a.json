{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hojin\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uCF54\\uD14C\\uC774\\uD1A05\\uAE30 \\uD300\\uD504\\uB85C\\uC81D\\uD2B8\\\\cotato\\\\frontend\\\\src\\\\containers\\\\auth\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeField, initializeForm } from \"../../modules/auth\";\nimport AuthForm from \"../../Components/auth/AuthForm\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const UNAUTHORIZED = 401;\n  const {\n    form\n  } = useSelector(_ref => {\n    let {\n      auth\n    } = _ref;\n    return {\n      form: auth.login\n    };\n  });\n  //인풋 변경 이벤트 핸들러\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch(changeField({\n      form: 'login',\n      key: name,\n      value\n    }));\n  };\n\n  //폼 등록 이벤트 핸들러\n  const onSubmit = async e => {\n    e.preventDefault();\n    await axios.post(`http://localhost:8080/users/login`, form, {\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.status.valueOf(UNAUTHORIZED)) {\n        alert(\"아이디 혹은 비밀번호를 확인하세요\");\n      }\n    });\n    await axios.post(`http://localhost:8080/login/result`, form, {\n      withCredentials: true,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      const result = res.data.message;\n      if (result == \"LOGIN SUCCESS\") {\n        alert(\"로그인에 성공하였습니다! 메인 페이지로 이동합니다.\");\n        window.open('http://localhost:3000/cotato', '_self');\n      } else if (res.status.valueOf(UNAUTHORIZED)) {\n        alert(\"아이디 혹은 비밀번호를 확인하세요\");\n      }\n    });\n  };\n\n  //컴포넌트가 처음 렌더링될 떄 form을 초기화함\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    type: \"login\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"asKhFg531LzMwIYTHdiICFJSylE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","changeField","initializeForm","AuthForm","axios","LoginForm","dispatch","UNAUTHORIZED","form","auth","login","onChange","e","value","name","target","key","onSubmit","preventDefault","post","withCredentials","headers","then","res","status","valueOf","alert","result","data","message","window","open"],"sources":["C:/Users/hojin/OneDrive/바탕 화면/코테이토5기 팀프로젝트/cotato/frontend/src/containers/auth/LoginForm.js"],"sourcesContent":["import {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeField, initializeForm} from \"../../modules/auth\";\r\nimport AuthForm from \"../../Components/auth/AuthForm\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n    const UNAUTHORIZED  = 401;\r\n    const {form} = useSelector(({auth}) => ({\r\n        form: auth.login\r\n    }));\r\n    //인풋 변경 이벤트 핸들러\r\n    const onChange = e => {\r\n        const {value, name} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'login',\r\n                key: name,\r\n                value\r\n            })\r\n        );\r\n    };\r\n\r\n    //폼 등록 이벤트 핸들러\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await axios.post(`http://localhost:8080/users/login`,form,\r\n        {\r\n            withCredentials: true,\r\n            headers : {\"Content-Type\" : \"application/json\"}\r\n        }).then((res) => {\r\n            if (res.status.valueOf(UNAUTHORIZED)) {\r\n                alert(\"아이디 혹은 비밀번호를 확인하세요\");\r\n            }\r\n        });\r\n        \r\n        await axios.post(`http://localhost:8080/login/result`,form,\r\n        {\r\n            withCredentials: true,\r\n            headers : {\"Content-Type\" : \"application/json\"}\r\n        }).then((res) => {\r\n            const result = res.data.message;\r\n            if (result == \"LOGIN SUCCESS\") {\r\n                alert(\"로그인에 성공하였습니다! 메인 페이지로 이동합니다.\");\r\n                window.open('http://localhost:3000/cotato','_self');\r\n            } else if (res.status.valueOf(UNAUTHORIZED)) {\r\n                alert(\"아이디 혹은 비밀번호를 확인하세요\")\r\n            }\r\n        });\r\n    };\r\n\r\n    //컴포넌트가 처음 렌더링될 떄 form을 초기화함\r\n    useEffect(() => {\r\n        dispatch(initializeForm('login'));\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <AuthForm\r\n                    type=\"login\"\r\n                    form={form}\r\n                    onChange={onChange}\r\n                    onSubmit={onSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nexport default LoginForm;"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,WAAW,EAAEC,cAAc,QAAO,oBAAoB;AAC9D,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAMQ,YAAY,GAAI,GAAG;EACzB,MAAM;IAACC;EAAI,CAAC,GAAGR,WAAW,CAAC;IAAA,IAAC;MAACS;IAAI,CAAC;IAAA,OAAM;MACpCD,IAAI,EAAEC,IAAI,CAACC;IACf,CAAC;EAAA,CAAC,CAAC;EACH;EACA,MAAMC,QAAQ,GAAGC,CAAC,IAAI;IAClB,MAAM;MAACC,KAAK;MAAEC;IAAI,CAAC,GAAGF,CAAC,CAACG,MAAM;IAC9BT,QAAQ,CACJL,WAAW,CAAC;MACRO,IAAI,EAAE,OAAO;MACbQ,GAAG,EAAEF,IAAI;MACTD;IACJ,CAAC,CAAC,CACL;EACL,CAAC;;EAED;EACA,MAAMI,QAAQ,GAAG,MAAOL,CAAC,IAAK;IAC1BA,CAAC,CAACM,cAAc,EAAE;IAClB,MAAMd,KAAK,CAACe,IAAI,CAAE,mCAAkC,EAACX,IAAI,EACzD;MACIY,eAAe,EAAE,IAAI;MACrBC,OAAO,EAAG;QAAC,cAAc,EAAG;MAAkB;IAClD,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,MAAM,CAACC,OAAO,CAAClB,YAAY,CAAC,EAAE;QAClCmB,KAAK,CAAC,oBAAoB,CAAC;MAC/B;IACJ,CAAC,CAAC;IAEF,MAAMtB,KAAK,CAACe,IAAI,CAAE,oCAAmC,EAACX,IAAI,EAC1D;MACIY,eAAe,EAAE,IAAI;MACrBC,OAAO,EAAG;QAAC,cAAc,EAAG;MAAkB;IAClD,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACb,MAAMI,MAAM,GAAGJ,GAAG,CAACK,IAAI,CAACC,OAAO;MAC/B,IAAIF,MAAM,IAAI,eAAe,EAAE;QAC3BD,KAAK,CAAC,8BAA8B,CAAC;QACrCI,MAAM,CAACC,IAAI,CAAC,8BAA8B,EAAC,OAAO,CAAC;MACvD,CAAC,MAAM,IAAIR,GAAG,CAACC,MAAM,CAACC,OAAO,CAAClB,YAAY,CAAC,EAAE;QACzCmB,KAAK,CAAC,oBAAoB,CAAC;MAC/B;IACJ,CAAC,CAAC;EACN,CAAC;;EAED;EACA5B,SAAS,CAAC,MAAM;IACZQ,QAAQ,CAACJ,cAAc,CAAC,OAAO,CAAC,CAAC;EACrC,CAAC,EAAE,CAACI,QAAQ,CAAC,CAAC;EAEd,oBACI,QAAC,QAAQ;IACG,IAAI,EAAC,OAAO;IACZ,IAAI,EAAEE,IAAK;IACX,QAAQ,EAAEG,QAAS;IACnB,QAAQ,EAAEM;EAAS;IAAA;IAAA;IAAA;EAAA,QAC7B;AAEV,CAAC;AAAC,GA3DIZ,SAAS;EAAA,QACMN,WAAW,EAEbC,WAAW;AAAA;AAAA,KAHxBK,SAAS;AA6Df,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}