{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JYUN\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354 (21)\\\\CotatoProject\\\\frontend\\\\src\\\\write\\\\WriteButtonContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { initialize, writePost } from '../modules/write';\nimport WriteButton from './WriteButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WriteButtonContainer = _ref => {\n  _s();\n  let {\n    history,\n    error,\n    setError\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    userId,\n    postType,\n    category,\n    rentalPrice,\n    title,\n    content,\n    date,\n    writer,\n    images,\n    post,\n    postError\n  } = useSelector(_ref2 => {\n    let {\n      write\n    } = _ref2;\n    return {\n      userId: write.userId,\n      postType: write.postType,\n      category: write.category,\n      rentalPrice: write.rentalPrice,\n      title: write.title,\n      content: write.content,\n      date: write.date,\n      writer: write.writer,\n      images: write.images,\n      post: write.post,\n      postError: write.postError\n    };\n  });\n  const onPublish = () => {\n    if (title === '') {\n      setError('제목을 입력해주세요');\n      return;\n    }\n    if (content === '') {\n      setError('내용을 적어주세요');\n      return;\n    }\n    if (category === '' && postType === '모집 게시물') {\n      setError('카테고리를 지정해주세요');\n      return;\n    }\n    if (rentalPrice === null && postType === '모집 게시물') {\n      setError('가격을 입력해주세요');\n      return;\n    }\n    if (category === '' && postType === '모집 게시물') {\n      setError('카테고리를 지정해주세요');\n      return;\n    }\n    if (date === null && postType === '모집 게시물') {\n      setError('날짜를 정해주세요');\n      return;\n    }\n    if (images === null && postType === '모집 게시물') {\n      setError('이미지를 넣어주세요');\n      return;\n    }\n    if (postError) {\n      setError('에러 발생!');\n      return;\n    }\n    dispatch(writePost({\n      userId,\n      postType,\n      category,\n      rentalPrice,\n      title,\n      content,\n      date,\n      writer,\n      images\n    }));\n  };\n  const onCancel = () => {\n    dispatch(initialize());\n    history.goBack();\n  };\n  useEffect(() => {\n    if (post) {\n      history.onPublish(\"/posts\");\n    }\n  }, [history, post]);\n  return /*#__PURE__*/_jsxDEV(WriteButton, {\n    onPublish: onPublish,\n    onCancel: onCancel\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(WriteButtonContainer, \"158SOCXvVA7k4s0LCqg4JYdqzZU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = WriteButtonContainer;\nexport default _c2 = withRouter(WriteButtonContainer);\nvar _c, _c2;\n$RefreshReg$(_c, \"WriteButtonContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","withRouter","initialize","writePost","WriteButton","WriteButtonContainer","history","error","setError","dispatch","userId","postType","category","rentalPrice","title","content","date","writer","images","post","postError","write","onPublish","onCancel","goBack"],"sources":["C:/Users/JYUN/Desktop/새 폴더 (21)/CotatoProject/frontend/src/write/WriteButtonContainer.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { initialize, writePost } from '../modules/write';\r\nimport WriteButton from './WriteButton';\r\n\r\nconst WriteButtonContainer = ({ history, error, setError }) => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        userId,\r\n        postType,\r\n        category,\r\n        rentalPrice,\r\n        title,\r\n        content,\r\n        date,\r\n        writer,\r\n        images,\r\n        post,\r\n        postError,\r\n    } = useSelector(({ write }) => ({\r\n        userId: write.userId,\r\n        postType: write.postType,\r\n        category: write.category,\r\n        rentalPrice: write.rentalPrice,\r\n        title: write.title,\r\n        content: write.content,\r\n        date: write.date,\r\n        writer: write.writer,\r\n        images: write.images,\r\n        post: write.post,\r\n        postError: write.postError,\r\n    }));\r\n\r\n    const onPublish = () => {\r\n        if(title === '') {\r\n            setError('제목을 입력해주세요');\r\n\r\n            return;\r\n        }\r\n\r\n        if(content === '') {\r\n            setError('내용을 적어주세요');\r\n\r\n            return;\r\n        }\r\n\r\n        if(category === '' && postType === '모집 게시물') {\r\n            setError('카테고리를 지정해주세요');\r\n\r\n            return;\r\n        }\r\n\r\n        if(rentalPrice === null && postType === '모집 게시물') {\r\n            setError('가격을 입력해주세요');\r\n\r\n            return;\r\n        }\r\n\r\n        if(category === '' && postType === '모집 게시물') {\r\n            setError('카테고리를 지정해주세요');\r\n\r\n            return;\r\n        }\r\n\r\n        if(date === null && postType === '모집 게시물') {\r\n            setError('날짜를 정해주세요');\r\n\r\n            return;\r\n        }\r\n\r\n        if(images === null && postType === '모집 게시물') {\r\n            setError('이미지를 넣어주세요');\r\n\r\n            return;\r\n        }\r\n\r\n        if(postError) {\r\n            setError('에러 발생!');\r\n\r\n            return;\r\n        }\r\n\r\n        dispatch(writePost({\r\n            userId,\r\n            postType,\r\n            category,\r\n            rentalPrice,\r\n            title,\r\n            content,\r\n            date,\r\n            writer,\r\n            images,\r\n        }));\r\n    };\r\n\r\n    const onCancel = () => {\r\n        dispatch(initialize());\r\n\r\n        history.goBack();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(post) {\r\n            history.onPublish(\"/posts\");\r\n        }\r\n    }, [history, post]);\r\n\r\n    return (\r\n        <WriteButton\r\n            onPublish={ onPublish }\r\n            onCancel={ onCancel }\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(WriteButtonContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}