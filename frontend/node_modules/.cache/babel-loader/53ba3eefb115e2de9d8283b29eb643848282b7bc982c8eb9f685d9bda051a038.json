{"ast":null,"code":"import client from './client';\nimport axios from 'axios';\nexport const write = _ref => {\n  let {\n    userId,\n    postType,\n    category,\n    title,\n    content,\n    rentalPrice,\n    date,\n    writer,\n    images\n  } = _ref;\n  if (postType === '모집 게시물') {\n    const formData = new FormData();\n    formData.append('userId', userId);\n    formData.append('postType', postType);\n    formData.append('title', title);\n    formData.append('content', content);\n    formData.append('writer', writer);\n    client.post('/post-service/write', formData);\n  } else {\n    const formData = new FormData();\n    formData.append('userId', userId);\n    formData.append('category', category);\n    formData.append('images', images);\n    formData.append('type', type);\n    formData.append('title', title);\n    formData.append('content', content);\n    formData.append('rentalPrice', rentalPrice);\n    formData.append('date', date);\n    formData.append('writer', writer);\n    images.forEach(image => formData.append(\"images\", image));\n    axios.post('');\n    client.post('/post-service/write', formData);\n  }\n};\nexport const readAllPosts = () => client.get('/post-service');\nexport const readPostsByStatus = status => client.get(`/post-service/posts/status/${status}`);\nexport const readPostById = id => client.get(`/post-service/post/${id}`);\nexport const readPostsByUserId = userId => client.get(`/post-service/${userId}/posts`);\nexport const readPostsByCategory = category => client.get(`/post-service/category/${category}`);\nexport const readPostsByKeyword = keyword => client.get(`/post-service/keyword/${keyword}`);\nexport const deletePost = id => client.get(`/post-service/${id}/delete`);\nexport const writeComment = _ref2 => {\n  let {\n    id,\n    comment\n  } = _ref2;\n  return client.post(`/post-service/${id}/comments`, comment);\n};\nexport const deleteComment = id => client.delete(`/post-service/${id}/comments`);","map":{"version":3,"names":["client","axios","write","userId","postType","category","title","content","rentalPrice","date","writer","images","formData","FormData","append","post","type","forEach","image","readAllPosts","get","readPostsByStatus","status","readPostById","id","readPostsByUserId","readPostsByCategory","readPostsByKeyword","keyword","deletePost","writeComment","comment","deleteComment","delete"],"sources":["C:/Users/JYUN/Desktop/새 폴더 (21)/CotatoProject/frontend/src/lib/api/posts.js"],"sourcesContent":["import client from './client';\r\nimport axios from 'axios';\r\n\r\nexport const write = ({\r\n    userId,\r\n    postType,\r\n    category,\r\n    title,\r\n    content,\r\n    rentalPrice,\r\n    date,\r\n    writer,\r\n    images\r\n}) => {\r\n    if(postType === '모집 게시물') {\r\n        const formData = new FormData();\r\n\r\n        formData.append('userId', userId);\r\n        formData.append('postType', postType);\r\n        formData.append('title', title);\r\n        formData.append('content', content);\r\n        formData.append('writer', writer);\r\n        client.post('/post-service/write', formData);\r\n    } else {\r\n        const formData = new FormData();\r\n\r\n        formData.append('userId', userId);\r\n        formData.append('category', category);\r\n        formData.append('images', images);\r\n        formData.append('type', type);\r\n        formData.append('title', title);\r\n        formData.append('content', content);\r\n        formData.append('rentalPrice', rentalPrice);\r\n        formData.append('date', date);\r\n        formData.append('writer', writer);\r\n        images.forEach((image) => formData.append(\"images\", image));\r\n        axios.post('')\r\n        client.post('/post-service/write', formData);\r\n    }\r\n}\r\nexport const readAllPosts = () => client.get('/post-service');\r\n\r\nexport const readPostsByStatus = status => client.get(`/post-service/posts/status/${status}`)\r\n\r\nexport const readPostById = id => client.get(`/post-service/post/${id}`);\r\n\r\nexport const readPostsByUserId = userId => client.get(`/post-service/${userId}/posts`);\r\n\r\nexport const readPostsByCategory = category => client.get(`/post-service/category/${category}`);\r\n\r\nexport const readPostsByKeyword = keyword => client.get(`/post-service/keyword/${keyword}`);\r\n\r\nexport const deletePost = id => client.get(`/post-service/${id}/delete`);\r\n\r\nexport const writeComment = ({ id, comment }) => client.post(`/post-service/${id}/comments`, comment);\r\n\r\nexport const deleteComment = id => client.delete(`/post-service/${id}/comments`);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}