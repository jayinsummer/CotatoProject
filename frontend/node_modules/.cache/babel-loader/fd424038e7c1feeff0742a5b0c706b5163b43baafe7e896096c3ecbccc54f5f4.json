{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JYUN\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354 (21)\\\\CotatoProject\\\\frontend\\\\src\\\\containers\\\\common\\\\HeaderContainer.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Responsive from '../../Components/common/Responsive';\nimport Button from '../../Components/common/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HeaderBlock = styled.div`\n  position: fixed;\n  width: 100%;\n  background: white;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\n`;\n\n/**\r\n * Responsive 컴포넌트의 속성에 스타일을 추가해서 새로운 컴포넌트 생성\r\n */\n_c = HeaderBlock;\nconst Wrapper = styled(Responsive)`\n  height: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between; /* flex option */\n  .logo {\n    font-size: 1.125rem;\n    font-weight: 800;\n    letter-spacing: 2px;\n  }\n  .right {\n    display: flex;\n    align-items: center;\n  }\n`;\n\n/**\r\n * 헤더가 fixed로 되어 있기 때문에 겹치지 않게 페이지의 컨텐츠가 4rem 아래 나타나도록 해주는 컴포넌트\r\n */\n_c2 = Wrapper;\nconst Spacer = styled.div`\n  height: 4rem;\n`;\n\n/**\r\n * user 정보 띄워줄 컴포넌트\r\n */\n_c3 = Spacer;\nconst UserInfo = styled.div`\n  font-weight: 800;\n  margin-right: 1rem;\n`;\n_c4 = UserInfo;\nconst Header = _ref => {\n  let {\n    user\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderBlock, {\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"logo\",\n          children: \"REACTERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            to: \"/login\",\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c5 = Header;\nexport default Header;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"HeaderBlock\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Spacer\");\n$RefreshReg$(_c4, \"UserInfo\");\n$RefreshReg$(_c5, \"Header\");","map":{"version":3,"names":["React","styled","Link","Responsive","Button","HeaderBlock","div","Wrapper","Spacer","UserInfo","Header","user","username"],"sources":["C:/Users/JYUN/Desktop/새 폴더 (21)/CotatoProject/frontend/src/containers/common/HeaderContainer.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Responsive from '../../Components/common/Responsive';\r\nimport Button from '../../Components/common/Button';\r\n\r\nconst HeaderBlock = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  background: white;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\r\n`;\r\n\r\n/**\r\n * Responsive 컴포넌트의 속성에 스타일을 추가해서 새로운 컴포넌트 생성\r\n */\r\nconst Wrapper = styled(Responsive)`\r\n  height: 4rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between; /* flex option */\r\n  .logo {\r\n    font-size: 1.125rem;\r\n    font-weight: 800;\r\n    letter-spacing: 2px;\r\n  }\r\n  .right {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\n\r\n\r\n/**\r\n * 헤더가 fixed로 되어 있기 때문에 겹치지 않게 페이지의 컨텐츠가 4rem 아래 나타나도록 해주는 컴포넌트\r\n */\r\nconst Spacer = styled.div`\r\n  height: 4rem;\r\n`;\r\n\r\n\r\n/**\r\n * user 정보 띄워줄 컴포넌트\r\n */\r\nconst UserInfo = styled.div`\r\n  font-weight: 800;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst Header = ({ user }) => {\r\n  return (\r\n    <>\r\n      <HeaderBlock>\r\n        <Wrapper>\r\n          {/* index 로 이동하는 Link 컴포넌트 */}\r\n          <Link to=\"/\" className=\"logo\">\r\n            REACTERS\r\n          </Link>\r\n          {/* user 값이 있으면 즉, 로그인 상태면 로그아웃을 버튼을 보여주고, 그렇지 않으면 로그인 버튼 보여주기 */}\r\n          {user ? (\r\n            <div className=\"right\">\r\n              <UserInfo>{user.username}</UserInfo>\r\n              <Button>로그아웃</Button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"right\">\r\n              <Button to=\"/login\">로그인</Button>\r\n            </div>\r\n          )}\r\n        </Wrapper>\r\n      </HeaderBlock>\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,MAAM,MAAM,gCAAgC;AAAC;AAAA;AAEpD,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAI;AAC/B;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AAFA,KAPMD,WAAW;AAUjB,MAAME,OAAO,GAAGN,MAAM,CAACE,UAAU,CAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAID;AACA;AACA;AAFA,MAlBMI,OAAO;AAqBb,MAAMC,MAAM,GAAGP,MAAM,CAACK,GAAI;AAC1B;AACA,CAAC;;AAGD;AACA;AACA;AAFA,MALME,MAAM;AAQZ,MAAMC,QAAQ,GAAGR,MAAM,CAACK,GAAI;AAC5B;AACA;AACA,CAAC;AAAC,MAHIG,QAAQ;AAKd,MAAMC,MAAM,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACtB,oBACE;IAAA,wBACE,QAAC,WAAW;MAAA,uBACV,QAAC,OAAO;QAAA,wBAEN,QAAC,IAAI;UAAC,EAAE,EAAC,GAAG;UAAC,SAAS,EAAC,MAAM;UAAA,UAAC;QAE9B;UAAA;UAAA;UAAA;QAAA,QAAO,EAENA,IAAI,gBACH;UAAK,SAAS,EAAC,OAAO;UAAA,wBACpB,QAAC,QAAQ;YAAA,UAAEA,IAAI,CAACC;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAY,eACpC,QAAC,MAAM;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACjB,gBAEN;UAAK,SAAS,EAAC,OAAO;UAAA,uBACpB,QAAC,MAAM;YAAC,EAAE,EAAC,QAAQ;YAAA,UAAC;UAAG;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QAEnC;MAAA;QAAA;QAAA;QAAA;MAAA;IACO;MAAA;MAAA;MAAA;IAAA,QACE,eACd,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEP,CAAC;AAAC,MAzBIF,MAAM;AA2BZ,eAAeA,MAAM;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}